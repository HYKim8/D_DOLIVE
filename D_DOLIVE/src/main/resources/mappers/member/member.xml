<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.sist.d_dolive.member">
	<!-- 수정 -->
	<update id="doUpdate" parameterType="MemberVO">
		UPDATE member
		SET pw = #{pw, jdbcType = VARCHAR}
			, gender = #{gender, jdbcType = VARCHAR}
			, name	= #{name, jdbcType = VARCHAR}
			, ihidnum	= #{ihidnum, jdbcType = VARCHAR}
			, addr	= #{addr, jdbcType = VARCHAR}
			, addr2	= #{addr2, jdbcType = VARCHAR}
			, zipNo	= #{zipNo, jdbcType = VARCHAR}
			, tel = #{tel, jdbcType = VARCHAR}
			, modId	= #{modId, jdbcType = VARCHAR}
			, modDt = SYSDATE
		WHERE email = #{email}
	</update>
	 
	<sql id="MemberColumns"> 
		email	
		, pw		
		, gender	
		, name	
		, ihidnum	
		, addr	
		, addr2	
		, zipno	 
		, tel		 
		, regId	
		, TO_CHAR(regDt, 'YYYY/MM/DD HH24MISS') regDt	
		, modId	
		, TO_CHAR(modDt, 'YYYY/MM/DD HH24MISS') modDt
	</sql>
	 
	<!-- 단건조회 -->
	<select id="doSelectOne" parameterType="MemberVO" resultType="MemberVO">
		SELECT
			<include refid="MemberColumns"></include>
		FROM member
		WHERE email = #{email}
	</select>
	 
	<!-- 등록 -->
	<insert id="doInsert" parameterType="MemberVO">
		INSERT INTO member (
			email	
			, pw		
			, gender	
			, name	
			, birth	
			, addr	
			, addr2	
			, zipNo	
			, tel		
			, bizRno	
			, bizTel	
			, pcode	
			, regId	
			, modId	
		) VALUES (
			#{email, jdbcType = VARCHAR}
			, #{pw, jdbcType = VARCHAR}	
			, #{gender, jdbcType = VARCHAR}	
			, #{name, jdbcType = VARCHAR}
			, #{birth, jdbcType = VARCHAR}
			, #{addr, jdbcType = VARCHAR}
			, #{addr2, jdbcType = VARCHAR}
			, #{zipNo, jdbcType = VARCHAR}
			, #{tel, jdbcType = VARCHAR}	
			, #{bizRno, jdbcType = VARCHAR}	
			, #{bizTel, jdbcType = VARCHAR}	
			, #{pcode, jdbcType = VARCHAR}
			, #{regId, jdbcType = VARCHAR}
			, #{modId, jdbcType = VARCHAR}
		)
	</insert>
	 
	<!-- 삭제 -->
	<delete id="doDelete" parameterType="MemberVO">
		<![CDATA[
			DELETE FROM member WHERE email = #{email}
		]]>
	</delete>
	
	<delete id="doDeleteAll">
		<![CDATA[
			DELETE FROM member
		]]>
	</delete>
</mapper>